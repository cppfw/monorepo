name: ci
on:
  push: {branches-ignore: [latest], tags: ['*']}
  pull_request:
jobs:
##### deb linux #####
  deb:
    strategy:
      fail-fast: false
      matrix:
        include:
          # - {os: debian, codename: bullseye, image_owner: }
          # - {os: debian, codename: bullseye, image_owner: , labels: [i386,docker]}
          # - {os: debian, codename: bullseye, image_owner: , labels: [arm32,docker]}
          # - {os: debian, codename: bullseye, image_owner: , labels: [arm64,docker]}
        #   - {os: debian, codename: bookworm, image_owner: }
        #   - {os: debian, codename: bookworm, image_owner: arm32v7/, labels: [ubuntu-24.04-arm]}
        #   - {os: debian, codename: bookworm, image_owner: arm64v8/, labels: [ubuntu-24.04-arm]}
          - {os: debian, codename: trixie, image_owner: }
          - {os: debian, codename: trixie, image_owner: arm32v7/, labels: [ubuntu-24.04-arm]}
          - {os: debian, codename: trixie, image_owner: arm64v8/, labels: [ubuntu-24.04-arm]}
          # - {os: ubuntu, codename: focal, image_owner: }
          # - {os: ubuntu, codename: jammy, image_owner: }
        #   - {os: ubuntu, codename: noble, image_owner: }
          # - {os: raspbian, codename: buster, image_owner: igagis/, labels: [arm32,docker]}
          # - {os: raspbian, codename: bullseye, image_owner: igagis/, labels: [arm32,docker]}
          # - {os: raspbian, codename: bookworm, image_owner: igagis/, labels: [ubuntu-24.04-arm]}
    runs-on: ${{ (matrix.labels == '' && 'ubuntu-latest') || matrix.labels }}
    container: ${{ matrix.image_owner }}${{ matrix.os }}:${{ matrix.codename }}
    name: linux - ${{ matrix.image_owner }}${{ matrix.os }}:${{ matrix.codename }}
    steps:
      - name: install build tools
        run: |
          sudo apt --quiet update --yes
          sudo apt --quiet install --yes cmake git
      - name: git clone
        uses: myci-actions/checkout@main
      - name: generate cmake
        run: |
          mkdir out
          cd out
          cmake ../build/cmake
      - name: build
        run: |
          cd out
          make --jobs=$(nproc)
